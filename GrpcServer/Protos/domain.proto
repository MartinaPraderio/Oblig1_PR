syntax = "proto3";

option csharp_namespace = "GrpcServer";

package domain;

service Provider {
    rpc Login(InfoRequest) returns (InfoRequest);
    rpc Logout(InfoRequest) returns (InfoRequest);
    rpc LoadTestData (InfoRequest) returns (InfoRequest);

    rpc SendGame(Game) returns (Game);
    rpc GetGame(InfoRequest) returns (Game);
    rpc ModifyGame(InfoRequest) returns (InfoRequest);
    rpc DeleteGame(InfoRequest) returns (InfoRequest);
    rpc GetGamesContaining (InfoRequest) returns (Games);
    rpc GetGamesByGender (InfoRequest) returns (Games);
    rpc GetGamesByCalification (InfoRequest) returns (Games);
    rpc BuyGame (InfoRequest) returns (InfoRequest);
    rpc QualifyGame (InfoRequest) returns (InfoRequest);

    rpc SendUser(User) returns (User);
    rpc GetUser(InfoRequest) returns (User);
    rpc ModifyUser(InfoRequest) returns (InfoRequest);
    rpc DeleteUser(InfoRequest) returns (InfoRequest);

    rpc GetCatalogue(InfoRequest) returns (Catalogue);
    rpc GetUsers(InfoRequest) returns (Users);
}

message Game {
  string Title = 1;
  enum GameGender
    {
        Otros = 0;
        Aventura = 1;
        Accion = 2;
        Estrategia = 3;
        Infantil = 4;
        Deporte = 5;
    }
    GameGender Gender = 2;
    repeated UserRating UserRatings = 3;
    string Synopsis = 4;
    string Cover = 5;
    float RatingAverage = 6;
}

message Games {
    repeated Game Games = 1;
}

message User {
  string UserName = 1;
  repeated Game Games = 2;
}

message Users {
    repeated User Users = 1;
}

message UserRating {
  string review = 1;
  
  enum GameCalification{
        Sin_Calificaciones = 0;
        Muy_Malo = 1;
        Malo = 2;
        Medio = 3;
        Bueno = 4;
        Muy_Bueno = 5;
    }
    GameCalification calification = 2;
    User user = 3;
}

message Catalogue {
  repeated Game Games = 1;
}

message InfoRequest {
    string info = 1;
} 